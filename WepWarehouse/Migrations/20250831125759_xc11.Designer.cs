// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WepWarehouse.Data;

#nullable disable

namespace WepWarehouse.Migrations
{
    [DbContext(typeof(WarehouseContext))]
    [Migration("20250831125759_xc11")]
    partial class xc11
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WepWarehouse.Data.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WepWarehouse.Data.WareHouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Country_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Country_Id");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("WepWarehouse.Data.WareHouseItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MSRPPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<int>("Warehouse_id")
                        .HasColumnType("int");

                    b.Property<string>("kUCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Warehouse_id");

                    b.ToTable("WareHouseItems");
                });

            modelBuilder.Entity("WepWarehouse.Data.WareHouse", b =>
                {
                    b.HasOne("WepWarehouse.Data.Country", "Country")
                        .WithMany("wareHouses")
                        .HasForeignKey("Country_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WepWarehouse.Data.WareHouseItem", b =>
                {
                    b.HasOne("WepWarehouse.Data.WareHouse", "wareHouse")
                        .WithMany("wareHouseItems")
                        .HasForeignKey("Warehouse_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("wareHouse");
                });

            modelBuilder.Entity("WepWarehouse.Data.Country", b =>
                {
                    b.Navigation("wareHouses");
                });

            modelBuilder.Entity("WepWarehouse.Data.WareHouse", b =>
                {
                    b.Navigation("wareHouseItems");
                });
#pragma warning restore 612, 618
        }
    }
}
